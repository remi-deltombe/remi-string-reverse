{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCA;;;;;;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;ACVA;AACA;AACA;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACfA;AAEA;AACA;AACA","sources":["webpack://remi-string-reverse/./src/lib/index.ts","webpack://remi-string-reverse/./src/lib/string-reverse.ts","webpack://remi-string-reverse/./src/lib/string-reverse.worker.ts","webpack://remi-string-reverse/webpack/bootstrap","webpack://remi-string-reverse/webpack/runtime/define property getters","webpack://remi-string-reverse/webpack/runtime/global","webpack://remi-string-reverse/webpack/runtime/hasOwnProperty shorthand","webpack://remi-string-reverse/webpack/runtime/make namespace object","webpack://remi-string-reverse/webpack/runtime/publicPath","webpack://remi-string-reverse/./src/demo/index.ts"],"sourcesContent":["export { stringReverse } from \"./string-reverse\";\n","import Worker from \"./string-reverse.worker\";\n\n/**\n * Reverse a string in a dedicated worker using WASM\n * @param input string to reverse\n * @returns input string reversed\n * @example\n *  // return 'olleH'\n *  await stringReverse('Hello')\n */\nexport async function stringReverse(input: string): Promise<string> {\n  return new Promise((r) => {\n    const worker = Worker();\n\n    worker.onmessage = () => {\n      // worker is ready to be used\n      worker.postMessage(input);\n      worker.onmessage = (e: MessageEvent<string>) => {\n        r(e.data);\n        worker.terminate();\n      };\n    };\n    worker.onmessageerror = (e: any) => {\n      console.log(\"ERROR\", e);\n    };\n  });\n}\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"index.worker.js\");\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","import { stringReverse } from \"../lib\";\n\nstringReverse('Hello world').then(r=>{\n    document.querySelector(\"body\").innerHTML = `<h1>${r}</h1>`;\n})"],"names":[],"sourceRoot":""}